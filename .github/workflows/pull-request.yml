name: Pull Request Workflow

on:
  pull_request:
    branches: [ develop ]

jobs:
  build:
    runs-on: windows-latest
    steps:
      - name: Checkout the code
        uses: actions/checkout@v2
      - name: Get gradle cache
        uses: actions/cache@v2
        with:
          path: |
            ~/.gradle/caches
            ~/.gradle/wrapper
            ~/.android/build-cache
          key: ${{ runner.os }}-gradle-${{ hashFiles('**/*.gradle*') }}
          restore-keys: |
            ${{ runner.os }}-gradle-
      - name: Create gradle properties
        run: echo $GRADLE_PROPERTIES > utility/gradle.properties
      - name: Add debug key
        run: echo "${{ secrets.DEBUG_KEYSTORE }}" > settings/keystore/debug.jks.asc &&
          gpg --batch --passphrase "${{ secrets.DEBUG_KEYSTORE_PASSPHRASE }}" -d -o settings/keystore/debug.jks settings/keystore/debug.jks.asc
      - name: Add firebase service credentials file
        run: echo "${{ secrets.DEBUG_FIREBASE_CREDENTIALS_FILE }}" > settings/distribute/firebase-app-distribution-dev.json.asc &&
          gpg --batch --passphrase "${{ secrets.DEBUG_FIREBASE_CREDENTIALS_PASSPHRASE }}" -d -o settings/distribute/firebase-app-distribution-dev.json settings/distribute/firebase-app-distribution-dev.json.asc
      - name: Add google service file
        run: echo "${{ secrets.DEBUG_GOOGLE_SERVICE_FILE }}" > application/src/dev/google-services.json.asc &&
          gpg --batch --passphrase "${{ secrets.DEBUG_GOOGLE_SERVICE_PASSPHRASE }}" -d -o application/src/dev/google-services.json application/src/dev/google-services.json.asc
      - name: Build the app
        run: ./gradlew clean :application:assembleDevDebug
      - name: Start tests
        run: ./gradlew testDevDebugUnitTest
      - name: Add correct permissions to files that need to be cached
        run:  icacls "C:\Users\$($env:UserName)\.gradle\caches" /grant:r "$($env:UserName):F" /T

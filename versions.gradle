//region Dependencies

def deps = [:]
ext.deps = deps

def versions = [:]
versions.android_gradle_plugin = "4.1.1"
versions.androidx_constraint = "2.0.4"
versions.androidx_material = "1.2.1"
versions.androidx_navigation = "2.3.1"
versions.androidx_recyclerview = "1.1.0"
versions.androidx_room = "2.2.5"
versions.androidx_swiperefreshlayout = "1.1.0"
versions.androidx_tests = "1.3.1-alpha02"
versions.barista = "3.7.0"
versions.core_testing = "2.1.0"
versions.coroutines = "1.4.2"
versions.coroutines_play_services = "1.4.1"
versions.coroutines_test = "1.4.1"
versions.dagger = "2.30.1"
versions.espresso = "3.3.0"
versions.fast_adapter = "5.3.1"
versions.firebase_appdistribution = "2.0.1"
versions.firebase_bom = "26.1.0"
versions.firebase_crashlytics_plugin = "2.4.1"
versions.google_services_plugin = "4.3.4"
versions.javax = "1"
versions.joda_time = "2.10.8"
versions.junit = "4.13.1"
versions.junit_ktx = "1.1.2"
versions.kotlin = "1.4.20"
versions.lifecycle = "2.2.0"
versions.limbo_mvvm = "3.1.1"
versions.limbo_mvvm_dagger = "3.0.3"
versions.limbo_recyclerview = "3.0.8"
versions.lottie = "3.5.0"
versions.mapstruct = "1.4.1.Final"
versions.material_dialogs = "3.3.0"
versions.mockito = "3.6.28"
versions.timber = "4.7.1"
versions.truth = "1.1"
deps.versions = versions

//endregion

//region Build

def build = [:]
build.android_gradle_plugin = "com.android.tools.build:gradle:$versions.android_gradle_plugin"
build.firebase_appdistribution =
    "com.google.firebase:firebase-appdistribution-gradle:$versions.firebase_appdistribution"
build.firebase_crashlytics =
    "com.google.firebase:firebase-crashlytics-gradle:$versions.firebase_crashlytics_plugin"
build.google_services_plugin = "com.google.gms:google-services:$versions.google_services_plugin"
build.kotlin_gradle_plugin = "org.jetbrains.kotlin:kotlin-gradle-plugin:$versions.kotlin"
build.navigation_safe_args =
    "androidx.navigation:navigation-safe-args-gradle-plugin:$versions.androidx_navigation"
deps.build = build

def build_versions = [:]
build_versions.compile_sdk = 30
build_versions.min_sdk = 23
build_versions.target_sdk = 30
deps.build_versions = build_versions

//endregion

//region Dagger

def dagger = [:]
dagger.android = "com.google.dagger:dagger-android:$versions.dagger"
dagger.android_processor = "com.google.dagger:dagger-android-processor:$versions.dagger"
dagger.android_support = "com.google.dagger:dagger-android-support:$versions.dagger"
dagger.annotation = "javax.inject:javax.inject:$versions.javax"
dagger.compiler = "com.google.dagger:dagger-compiler:$versions.dagger"
dagger.runtime = "com.google.dagger:dagger:$versions.dagger"
deps.dagger = dagger

//endregion

//region Database

def database = [:]
database.compiler = "androidx.room:room-compiler:$versions.androidx_room"
database.ktx = "androidx.room:room-ktx:$versions.androidx_room"
database.runtime = "androidx.room:room-runtime:$versions.androidx_room"
deps.database = database

//endregion

//region Fast Adapter

def fast_adapter = [:]
fast_adapter.binding = "com.mikepenz:fastadapter-extensions-binding:$versions.fast_adapter"
fast_adapter.core = "com.mikepenz:fastadapter:$versions.fast_adapter"
fast_adapter.diff = "com.mikepenz:fastadapter-extensions-diff:$versions.fast_adapter"
fast_adapter.drag = "com.mikepenz:fastadapter-extensions-drag:$versions.fast_adapter"
fast_adapter.expandable = "com.mikepenz:fastadapter-extensions-expandable:$versions.fast_adapter"
fast_adapter.ui = "com.mikepenz:fastadapter-extensions-ui:$versions.fast_adapter"
fast_adapter.utils = "com.mikepenz:fastadapter-extensions-utils:$versions.fast_adapter"
deps.fast_adapter = fast_adapter

//endregion

//region Firebase

def firebase = [:]
firebase.analytics = "com.google.firebase:firebase-analytics-ktx"
firebase.bom = "com.google.firebase:firebase-bom:$versions.firebase_bom"
firebase.config = "com.google.firebase:firebase-config-ktx"
firebase.crashlytics = "com.google.firebase:firebase-crashlytics-ktx"
firebase.messaging = "com.google.firebase:firebase-messaging-ktx"
deps.firebase = firebase

//endregion

//region Kotlin

def kotlin = [:]
kotlin.coroutines = "org.jetbrains.kotlinx:kotlinx-coroutines-android:$versions.coroutines"
kotlin.coroutines_play_services =
    "org.jetbrains.kotlinx:kotlinx-coroutines-play-services:$versions.coroutines_play_services"
kotlin.stdlib_jdk8 = "org.jetbrains.kotlin:kotlin-stdlib-jdk8:$versions.kotlin"
deps.kotlin = kotlin

//endregion

//region Lifecycle

def lifecycle = [:]
lifecycle.ext = "androidx.lifecycle:lifecycle-extensions:$versions.lifecycle"
lifecycle.livedata = "androidx.lifecycle:lifecycle-livedata-ktx:$versions.lifecycle"
deps.lifecycle = lifecycle

//endregion

//region Limbo

def limbo = [:]
limbo.mvvm = "co.windly:limbo-mvvm:$versions.limbo_mvvm"
limbo.mvvm_dagger = "co.windly:limbo-mvvm-dagger:$versions.limbo_mvvm_dagger"
limbo.recycler_view = "co.windly:limbo-recyclerview:$versions.limbo_recyclerview"
deps.limbo = limbo

//endregion

//region Miscellaneous

def misc = [:]
misc.android_maps_utils = "com.google.maps.android:android-maps-utils:$versions.android_maps_utils"
misc.joda_time = "joda-time:joda-time:$versions.joda_time"
misc.mapstruct = "org.mapstruct:mapstruct:$versions.mapstruct"
misc.mapstruct_processor = "org.mapstruct:mapstruct-processor:$versions.mapstruct"
misc.timber = "com.jakewharton.timber:timber:$versions.timber"
deps.misc = misc

//endregion

//region Network

def network = [:]
deps.network = network

//endregion

//region Support / Androidx

def androidx = [:]
androidx.constraint = "androidx.constraintlayout:constraintlayout:$versions.androidx_constraint"
androidx.material = "com.google.android.material:material:$versions.androidx_material"
androidx.navigation_fragment =
    "androidx.navigation:navigation-fragment-ktx:$versions.androidx_navigation"
androidx.navigation_ui = "androidx.navigation:navigation-ui-ktx:$versions.androidx_navigation"
androidx.recyclerview = "androidx.recyclerview:recyclerview:$versions.androidx_recyclerview"
androidx.swiperefreshlayout =
    "androidx.swiperefreshlayout:swiperefreshlayout:$versions.androidx_swiperefreshlayout"
deps.androidx = androidx

//endregion

//region Test

def test = [:]
test.barista = "com.schibsted.spain:barista:$versions.barista"
test.core_testing = "android.arch.core:core-testing:$versions.core_testing"
test.coroutines_test = "org.jetbrains.kotlinx:kotlinx-coroutines-test:$versions.coroutines_test"
test.espresso = "androidx.test.espresso:espresso-core:$versions.espresso"
test.junit = "junit:junit:$versions.junit"
test.junit_ktx = "androidx.test.ext:junit-ktx:$versions.junit_ktx"
test.mockito_core = "org.mockito:mockito-core:$versions.mockito"
test.mockito_inline = "org.mockito:mockito-inline:$versions.mockito"
test.orchestrator = "androidx.test:orchestrator:$versions.androidx_tests"
test.rules = "androidx.test:rules:$versions.androidx_tests"
test.runner = "androidx.test:runner:$versions.androidx_tests"
test.test_core = "androidx.test:core-ktx:$versions.androidx_tests"
test.truth = "com.google.truth:truth:$versions.truth"
deps.test = test

//endregion

//region Ui

def ui = [:]
ui.lottie = "com.airbnb.android:lottie:$versions.lottie"
ui.material_dialogs = "com.afollestad.material-dialogs:core:$versions.material_dialogs"
deps.ui = ui

//endregion

//region Repositories

static def addRepos(RepositoryHandler handler) {
  handler.google()
  handler.jcenter()
  handler.mavenCentral()
  handler.maven { url "https://jitpack.io" }
  handler.maven { url "https://oss.sonatype.org/content/repositories/snapshots" }
}

ext.addRepos = this.&addRepos

//endregion
